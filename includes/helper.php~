<?php

// Function to test if string is valid JSON
function isJson($string) {
   json_decode($string);
    return (json_last_error() == JSON_ERROR_NONE);
}

// Helper function to format var_dump
function dump($variable) {
  echo "<pre>";
  var_dump($variable);
  echo "</pre>";
  exit(1);
}

// Function to clean input file generated by hydrasta
function cleanInputFile($filename){
  $file = file_Get_contents($filename);

  // Strip header information
   $needle = 'JSON string:';
  $cleaning = strstr($file, $needle);
  $first_instance = '{';
  $cleaning = strstr($cleaning, $first_instance);

  // Strip footer information
  $last_instance = strrpos($cleaning, '}');
  $json_string = substr_replace($cleaning, '', $last_instance+1, strlen($cleaning));

  // Seup JSON Object
  if(isJson($json_string)){
    $json = json_decode($json_string);
  }else {
    exit('File: '.$filename.' is not valid a valid JSON string');
  }
  return $json;
}

$filename = 'data/48hours.txt';
$json = cleanInputFile($filename);

$sites = $json->return->traces;
$i = 1;
foreach($sites as $site){
  $unit = $site->varto_details->units;
  echo '<h1>'.$i.'</h1>';
  echo '<h2>Site Name: '.$site->site.' - '.$site->site_details->name.'</h2>';
  echo '<h3>Measurement: '.$site->varto_details->short_name."<h3>";
  echo '<table width="500px" border="solid" >';
  echo "\t<tr>";
  echo "\t\t<td>Value ($unit)</td><td>Time</td><td>Quality</td>";
  echo "\t</tr>";

  foreach($site->trace as $measure){
    $q = $measure->q;
    $date = strtotime($measure->t);
    $quality_code = $site->quality_codes->$q;
    echo "\t<tr>";
    echo "\t\t<td>$measure->v</td><td>".date('d/m/Y H:i', $date)."</td><td>$quality_code</td>";
    echo "\t</tr>";
  }

  echo "</table>";
  $i++;
}

