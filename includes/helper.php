<?php

// Function to test if string is valid JSON
function isJson($string) {
   json_decode($string);
    return (json_last_error() == JSON_ERROR_NONE);
}

// Helper function to format var_dump
function dump($variable) {
  echo "<pre>";
  var_dump($variable);
  echo "</pre>";
  exit(1);
}

// Function to clean input file generated by hydrasta
function cleanInputFile($filename){
  $file = file_Get_contents($filename);

  // Strip header information
   $needle = 'JSON string:';
  $cleaning = strstr($file, $needle);
  $first_instance = '{';
  $cleaning = strstr($cleaning, $first_instance);

  // Strip footer information
  $last_instance = strrpos($cleaning, '}');
  $json_string = substr_replace($cleaning, '', $last_instance+1, strlen($cleaning));

  // Seup JSON Object
  if(isJson($json_string)){
    $json = json_decode($json_string);
  }else {
    exit('File: '.$filename.' is not valid a valid JSON string');
  }
  return $json;
}

// Function to create processed directory
function processed_directory($directory = 'processed') {
  //Attempt to use private file system
  $path = variable_get('file_private_path');
  //if not set then use public
  if($path==NULL){
    $path = 'public://';
  } else {
    $path = 'private://';
  }
  $path .= $directory;
  $result = file_prepare_directory($path, FILE_CREATE_DIRECTORY);
  if($result){
    return $path;
  } else {
    return $result;
  }
}

